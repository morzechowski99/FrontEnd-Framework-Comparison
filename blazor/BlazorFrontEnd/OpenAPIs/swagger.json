{
  "openapi": "3.0.1",
  "info": {
    "title": "WebApi",
    "version": "1.0"
  },
  "paths": {
    "/api/Cars": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get cars",
        "responses": {
          "200": {
            "description": "List of cars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarItemDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Create a car",
        "requestBody": {
          "description": "new car data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateCarDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateCarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateCarDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car created"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cars/{id}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get car by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "car id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarItemDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Car with given id does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cars"
        ],
        "summary": "Update a car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "car id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "car data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateCarDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateCarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateCarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Car updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarItemDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Car with given id does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cars"
        ],
        "summary": "Delete a car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car deleted"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Car with given id does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/register": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Register new user",
        "requestBody": {
          "description": "user data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserDtoResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Login user",
        "requestBody": {
          "description": "user login data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CarItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "manufacturedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "power": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "leapCapacity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUpdateCarDto": {
        "required": [
          "brand",
          "model"
        ],
        "type": "object",
        "properties": {
          "brand": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "model": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "manufacturedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "power": {
            "maximum": 2000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "leapCapacity": {
            "maximum": 10,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RegisterUserDto": {
        "required": [
          "email",
          "password",
          "passwordConfirm",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z\\d]).{8,}$",
            "type": "string"
          },
          "passwordConfirm": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegisterUserDtoResponseDto": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/RegisterUserDto"
          },
          "status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseStatus": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TokenResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}